/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardAtlayoutRouteImport } from './routes/dashboard/@layout'
import { Route as DefaultAtlayoutRouteImport } from './routes/_default/@layout'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DefaultIndexRouteImport } from './routes/_default/index'
import { Route as BlankSignInRouteImport } from './routes/_blank/sign-in'
import { Route as Blank404RouteImport } from './routes/_blank/404'
import { Route as DefaultSettingsIndexRouteImport } from './routes/_default/settings/index'
import { Route as DefaultTeamSettingsRouteImport } from './routes/_default/$team/settings'
import { Route as DefaultProfileUsernameIndexRouteImport } from './routes/_default/profile/$username/index'
import { Route as DefaultTeamProjectIndexRouteImport } from './routes/_default/$team/$project/index'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const DashboardAtlayoutRoute = DashboardAtlayoutRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const DefaultAtlayoutRoute = DefaultAtlayoutRouteImport.update({
  id: '/_default',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardAtlayoutRoute,
} as any)
const DefaultIndexRoute = DefaultIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DefaultAtlayoutRoute,
} as any)
const BlankSignInRoute = BlankSignInRouteImport.update({
  id: '/_blank/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const Blank404Route = Blank404RouteImport.update({
  id: '/_blank/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const DefaultSettingsIndexRoute = DefaultSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => DefaultAtlayoutRoute,
} as any)
const DefaultTeamSettingsRoute = DefaultTeamSettingsRouteImport.update({
  id: '/$team/settings',
  path: '/$team/settings',
  getParentRoute: () => DefaultAtlayoutRoute,
} as any)
const DefaultProfileUsernameIndexRoute =
  DefaultProfileUsernameIndexRouteImport.update({
    id: '/profile/$username/',
    path: '/profile/$username/',
    getParentRoute: () => DefaultAtlayoutRoute,
  } as any)
const DefaultTeamProjectIndexRoute = DefaultTeamProjectIndexRouteImport.update({
  id: '/$team/$project/',
  path: '/$team/$project/',
  getParentRoute: () => DefaultAtlayoutRoute,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/dashboard': typeof DashboardAtlayoutRouteWithChildren
  '/404': typeof Blank404Route
  '/sign-in': typeof BlankSignInRoute
  '/': typeof DefaultIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/$team/settings': typeof DefaultTeamSettingsRoute
  '/settings': typeof DefaultSettingsIndexRoute
  '/$team/$project': typeof DefaultTeamProjectIndexRoute
  '/profile/$username': typeof DefaultProfileUsernameIndexRoute
}
export interface FileRoutesByTo {
  '/404': typeof Blank404Route
  '/sign-in': typeof BlankSignInRoute
  '/': typeof DefaultIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/$team/settings': typeof DefaultTeamSettingsRoute
  '/settings': typeof DefaultSettingsIndexRoute
  '/$team/$project': typeof DefaultTeamProjectIndexRoute
  '/profile/$username': typeof DefaultProfileUsernameIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_default': typeof DefaultAtlayoutRouteWithChildren
  '/dashboard': typeof DashboardAtlayoutRouteWithChildren
  '/_blank/404': typeof Blank404Route
  '/_blank/sign-in': typeof BlankSignInRoute
  '/_default/': typeof DefaultIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/_default/$team/settings': typeof DefaultTeamSettingsRoute
  '/_default/settings/': typeof DefaultSettingsIndexRoute
  '/_default/$team/$project/': typeof DefaultTeamProjectIndexRoute
  '/_default/profile/$username/': typeof DefaultProfileUsernameIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/dashboard'
    | '/404'
    | '/sign-in'
    | '/'
    | '/dashboard/'
    | '/$team/settings'
    | '/settings'
    | '/$team/$project'
    | '/profile/$username'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/404'
    | '/sign-in'
    | '/'
    | '/dashboard'
    | '/$team/settings'
    | '/settings'
    | '/$team/$project'
    | '/profile/$username'
  id:
    | '__root__'
    | '/_default'
    | '/dashboard'
    | '/_blank/404'
    | '/_blank/sign-in'
    | '/_default/'
    | '/dashboard/'
    | '/_default/$team/settings'
    | '/_default/settings/'
    | '/_default/$team/$project/'
    | '/_default/profile/$username/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DefaultAtlayoutRoute: typeof DefaultAtlayoutRouteWithChildren
  DashboardAtlayoutRoute: typeof DashboardAtlayoutRouteWithChildren
  Blank404Route: typeof Blank404Route
  BlankSignInRoute: typeof BlankSignInRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardAtlayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_default': {
      id: '/_default'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DefaultAtlayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardAtlayoutRoute
    }
    '/_default/': {
      id: '/_default/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DefaultIndexRouteImport
      parentRoute: typeof DefaultAtlayoutRoute
    }
    '/_blank/sign-in': {
      id: '/_blank/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof BlankSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_blank/404': {
      id: '/_blank/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof Blank404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_default/settings/': {
      id: '/_default/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DefaultSettingsIndexRouteImport
      parentRoute: typeof DefaultAtlayoutRoute
    }
    '/_default/$team/settings': {
      id: '/_default/$team/settings'
      path: '/$team/settings'
      fullPath: '/$team/settings'
      preLoaderRoute: typeof DefaultTeamSettingsRouteImport
      parentRoute: typeof DefaultAtlayoutRoute
    }
    '/_default/profile/$username/': {
      id: '/_default/profile/$username/'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof DefaultProfileUsernameIndexRouteImport
      parentRoute: typeof DefaultAtlayoutRoute
    }
    '/_default/$team/$project/': {
      id: '/_default/$team/$project/'
      path: '/$team/$project'
      fullPath: '/$team/$project'
      preLoaderRoute: typeof DefaultTeamProjectIndexRouteImport
      parentRoute: typeof DefaultAtlayoutRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface DefaultAtlayoutRouteChildren {
  DefaultIndexRoute: typeof DefaultIndexRoute
  DefaultTeamSettingsRoute: typeof DefaultTeamSettingsRoute
  DefaultSettingsIndexRoute: typeof DefaultSettingsIndexRoute
  DefaultTeamProjectIndexRoute: typeof DefaultTeamProjectIndexRoute
  DefaultProfileUsernameIndexRoute: typeof DefaultProfileUsernameIndexRoute
}

const DefaultAtlayoutRouteChildren: DefaultAtlayoutRouteChildren = {
  DefaultIndexRoute: DefaultIndexRoute,
  DefaultTeamSettingsRoute: DefaultTeamSettingsRoute,
  DefaultSettingsIndexRoute: DefaultSettingsIndexRoute,
  DefaultTeamProjectIndexRoute: DefaultTeamProjectIndexRoute,
  DefaultProfileUsernameIndexRoute: DefaultProfileUsernameIndexRoute,
}

const DefaultAtlayoutRouteWithChildren = DefaultAtlayoutRoute._addFileChildren(
  DefaultAtlayoutRouteChildren,
)

interface DashboardAtlayoutRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardAtlayoutRouteChildren: DashboardAtlayoutRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardAtlayoutRouteWithChildren =
  DashboardAtlayoutRoute._addFileChildren(DashboardAtlayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  DefaultAtlayoutRoute: DefaultAtlayoutRouteWithChildren,
  DashboardAtlayoutRoute: DashboardAtlayoutRouteWithChildren,
  Blank404Route: Blank404Route,
  BlankSignInRoute: BlankSignInRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
