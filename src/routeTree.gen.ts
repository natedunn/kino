/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DefaultAtlayoutRouteImport } from './routes/_default/@layout'
import { Route as DefaultIndexRouteImport } from './routes/_default/index'
import { Route as BlankSignOutRouteImport } from './routes/_blank/sign-out'
import { Route as BlankSignInRouteImport } from './routes/_blank/sign-in'
import { Route as Blank404RouteImport } from './routes/_blank/404'
import { Route as DefaultCreateAtlayoutRouteImport } from './routes/_default/create/@layout'
import { Route as DefaultOrgAtlayoutRouteImport } from './routes/_default/$org/@layout'
import { Route as DefaultSettingsIndexRouteImport } from './routes/_default/settings/index'
import { Route as DefaultOrgSettingsRouteImport } from './routes/_default/$org/settings'
import { Route as DefaultOrgDefaultAtlayoutRouteImport } from './routes/_default/$org/_default/@layout'
import { Route as DefaultOrgProjectAtlayoutRouteImport } from './routes/_default/$org/$project/@layout'
import { Route as DefaultProfileSettingsIndexRouteImport } from './routes/_default/profile/settings/index'
import { Route as DefaultProfileUsernameIndexRouteImport } from './routes/_default/profile/$username/index'
import { Route as DefaultCreateTeamIndexRouteImport } from './routes/_default/create/team/index'
import { Route as DefaultCreateProjectIndexRouteImport } from './routes/_default/create/project/index'
import { Route as DefaultOrgDefaultIndexRouteImport } from './routes/_default/$org/_default/index'
import { Route as DefaultOrgProjectChatAtlayoutRouteImport } from './routes/_default/$org/$project/chat/@layout'
import { Route as DefaultOrgProjectUpdatesIndexRouteImport } from './routes/_default/$org/$project/updates/index'
import { Route as DefaultOrgProjectRoadmapIndexRouteImport } from './routes/_default/$org/$project/roadmap/index'
import { Route as DefaultOrgProjectOverviewIndexRouteImport } from './routes/_default/$org/$project/overview/index'
import { Route as DefaultOrgProjectFilesIndexRouteImport } from './routes/_default/$org/$project/files/index'
import { Route as DefaultOrgProjectFeedbackIndexRouteImport } from './routes/_default/$org/$project/feedback/index'
import { Route as DefaultOrgProjectDiscussionsIndexRouteImport } from './routes/_default/$org/$project/discussions/index'
import { Route as DefaultOrgProjectChatIndexRouteImport } from './routes/_default/$org/$project/chat/index'
import { Route as DefaultOrgProjectFeedbackFeedbackIdIndexRouteImport } from './routes/_default/$org/$project/feedback/$feedbackId/index'
import { Route as DefaultOrgProjectChatChatIdIndexRouteImport } from './routes/_default/$org/$project/chat/$chatId/index'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const DefaultAtlayoutRoute = DefaultAtlayoutRouteImport.update({
  id: '/_default',
  getParentRoute: () => rootRouteImport,
} as any)
const DefaultIndexRoute = DefaultIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DefaultAtlayoutRoute,
} as any)
const BlankSignOutRoute = BlankSignOutRouteImport.update({
  id: '/_blank/sign-out',
  path: '/sign-out',
  getParentRoute: () => rootRouteImport,
} as any)
const BlankSignInRoute = BlankSignInRouteImport.update({
  id: '/_blank/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const Blank404Route = Blank404RouteImport.update({
  id: '/_blank/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const DefaultCreateAtlayoutRoute = DefaultCreateAtlayoutRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => DefaultAtlayoutRoute,
} as any)
const DefaultOrgAtlayoutRoute = DefaultOrgAtlayoutRouteImport.update({
  id: '/$org',
  path: '/$org',
  getParentRoute: () => DefaultAtlayoutRoute,
} as any)
const DefaultSettingsIndexRoute = DefaultSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => DefaultAtlayoutRoute,
} as any)
const DefaultOrgSettingsRoute = DefaultOrgSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DefaultOrgAtlayoutRoute,
} as any)
const DefaultOrgDefaultAtlayoutRoute =
  DefaultOrgDefaultAtlayoutRouteImport.update({
    id: '/_default',
    getParentRoute: () => DefaultOrgAtlayoutRoute,
  } as any)
const DefaultOrgProjectAtlayoutRoute =
  DefaultOrgProjectAtlayoutRouteImport.update({
    id: '/$project',
    path: '/$project',
    getParentRoute: () => DefaultOrgAtlayoutRoute,
  } as any)
const DefaultProfileSettingsIndexRoute =
  DefaultProfileSettingsIndexRouteImport.update({
    id: '/profile/settings/',
    path: '/profile/settings/',
    getParentRoute: () => DefaultAtlayoutRoute,
  } as any)
const DefaultProfileUsernameIndexRoute =
  DefaultProfileUsernameIndexRouteImport.update({
    id: '/profile/$username/',
    path: '/profile/$username/',
    getParentRoute: () => DefaultAtlayoutRoute,
  } as any)
const DefaultCreateTeamIndexRoute = DefaultCreateTeamIndexRouteImport.update({
  id: '/team/',
  path: '/team/',
  getParentRoute: () => DefaultCreateAtlayoutRoute,
} as any)
const DefaultCreateProjectIndexRoute =
  DefaultCreateProjectIndexRouteImport.update({
    id: '/project/',
    path: '/project/',
    getParentRoute: () => DefaultCreateAtlayoutRoute,
  } as any)
const DefaultOrgDefaultIndexRoute = DefaultOrgDefaultIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DefaultOrgDefaultAtlayoutRoute,
} as any)
const DefaultOrgProjectChatAtlayoutRoute =
  DefaultOrgProjectChatAtlayoutRouteImport.update({
    id: '/chat',
    path: '/chat',
    getParentRoute: () => DefaultOrgProjectAtlayoutRoute,
  } as any)
const DefaultOrgProjectUpdatesIndexRoute =
  DefaultOrgProjectUpdatesIndexRouteImport.update({
    id: '/updates/',
    path: '/updates/',
    getParentRoute: () => DefaultOrgProjectAtlayoutRoute,
  } as any)
const DefaultOrgProjectRoadmapIndexRoute =
  DefaultOrgProjectRoadmapIndexRouteImport.update({
    id: '/roadmap/',
    path: '/roadmap/',
    getParentRoute: () => DefaultOrgProjectAtlayoutRoute,
  } as any)
const DefaultOrgProjectOverviewIndexRoute =
  DefaultOrgProjectOverviewIndexRouteImport.update({
    id: '/overview/',
    path: '/overview/',
    getParentRoute: () => DefaultOrgProjectAtlayoutRoute,
  } as any)
const DefaultOrgProjectFilesIndexRoute =
  DefaultOrgProjectFilesIndexRouteImport.update({
    id: '/files/',
    path: '/files/',
    getParentRoute: () => DefaultOrgProjectAtlayoutRoute,
  } as any)
const DefaultOrgProjectFeedbackIndexRoute =
  DefaultOrgProjectFeedbackIndexRouteImport.update({
    id: '/feedback/',
    path: '/feedback/',
    getParentRoute: () => DefaultOrgProjectAtlayoutRoute,
  } as any)
const DefaultOrgProjectDiscussionsIndexRoute =
  DefaultOrgProjectDiscussionsIndexRouteImport.update({
    id: '/discussions/',
    path: '/discussions/',
    getParentRoute: () => DefaultOrgProjectAtlayoutRoute,
  } as any)
const DefaultOrgProjectChatIndexRoute =
  DefaultOrgProjectChatIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DefaultOrgProjectChatAtlayoutRoute,
  } as any)
const DefaultOrgProjectFeedbackFeedbackIdIndexRoute =
  DefaultOrgProjectFeedbackFeedbackIdIndexRouteImport.update({
    id: '/feedback/$feedbackId/',
    path: '/feedback/$feedbackId/',
    getParentRoute: () => DefaultOrgProjectAtlayoutRoute,
  } as any)
const DefaultOrgProjectChatChatIdIndexRoute =
  DefaultOrgProjectChatChatIdIndexRouteImport.update({
    id: '/$chatId/',
    path: '/$chatId/',
    getParentRoute: () => DefaultOrgProjectChatAtlayoutRoute,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/$org': typeof DefaultOrgDefaultAtlayoutRouteWithChildren
  '/create': typeof DefaultCreateAtlayoutRouteWithChildren
  '/404': typeof Blank404Route
  '/sign-in': typeof BlankSignInRoute
  '/sign-out': typeof BlankSignOutRoute
  '/': typeof DefaultIndexRoute
  '/$org/$project': typeof DefaultOrgProjectAtlayoutRouteWithChildren
  '/$org/settings': typeof DefaultOrgSettingsRoute
  '/settings': typeof DefaultSettingsIndexRoute
  '/$org/$project/chat': typeof DefaultOrgProjectChatAtlayoutRouteWithChildren
  '/$org/': typeof DefaultOrgDefaultIndexRoute
  '/create/project': typeof DefaultCreateProjectIndexRoute
  '/create/team': typeof DefaultCreateTeamIndexRoute
  '/profile/$username': typeof DefaultProfileUsernameIndexRoute
  '/profile/settings': typeof DefaultProfileSettingsIndexRoute
  '/$org/$project/chat/': typeof DefaultOrgProjectChatIndexRoute
  '/$org/$project/discussions': typeof DefaultOrgProjectDiscussionsIndexRoute
  '/$org/$project/feedback': typeof DefaultOrgProjectFeedbackIndexRoute
  '/$org/$project/files': typeof DefaultOrgProjectFilesIndexRoute
  '/$org/$project/overview': typeof DefaultOrgProjectOverviewIndexRoute
  '/$org/$project/roadmap': typeof DefaultOrgProjectRoadmapIndexRoute
  '/$org/$project/updates': typeof DefaultOrgProjectUpdatesIndexRoute
  '/$org/$project/chat/$chatId': typeof DefaultOrgProjectChatChatIdIndexRoute
  '/$org/$project/feedback/$feedbackId': typeof DefaultOrgProjectFeedbackFeedbackIdIndexRoute
}
export interface FileRoutesByTo {
  '/$org': typeof DefaultOrgDefaultIndexRoute
  '/create': typeof DefaultCreateAtlayoutRouteWithChildren
  '/404': typeof Blank404Route
  '/sign-in': typeof BlankSignInRoute
  '/sign-out': typeof BlankSignOutRoute
  '/': typeof DefaultIndexRoute
  '/$org/$project': typeof DefaultOrgProjectAtlayoutRouteWithChildren
  '/$org/settings': typeof DefaultOrgSettingsRoute
  '/settings': typeof DefaultSettingsIndexRoute
  '/create/project': typeof DefaultCreateProjectIndexRoute
  '/create/team': typeof DefaultCreateTeamIndexRoute
  '/profile/$username': typeof DefaultProfileUsernameIndexRoute
  '/profile/settings': typeof DefaultProfileSettingsIndexRoute
  '/$org/$project/chat': typeof DefaultOrgProjectChatIndexRoute
  '/$org/$project/discussions': typeof DefaultOrgProjectDiscussionsIndexRoute
  '/$org/$project/feedback': typeof DefaultOrgProjectFeedbackIndexRoute
  '/$org/$project/files': typeof DefaultOrgProjectFilesIndexRoute
  '/$org/$project/overview': typeof DefaultOrgProjectOverviewIndexRoute
  '/$org/$project/roadmap': typeof DefaultOrgProjectRoadmapIndexRoute
  '/$org/$project/updates': typeof DefaultOrgProjectUpdatesIndexRoute
  '/$org/$project/chat/$chatId': typeof DefaultOrgProjectChatChatIdIndexRoute
  '/$org/$project/feedback/$feedbackId': typeof DefaultOrgProjectFeedbackFeedbackIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_default': typeof DefaultAtlayoutRouteWithChildren
  '/_default/$org': typeof DefaultOrgAtlayoutRouteWithChildren
  '/_default/create': typeof DefaultCreateAtlayoutRouteWithChildren
  '/_blank/404': typeof Blank404Route
  '/_blank/sign-in': typeof BlankSignInRoute
  '/_blank/sign-out': typeof BlankSignOutRoute
  '/_default/': typeof DefaultIndexRoute
  '/_default/$org/$project': typeof DefaultOrgProjectAtlayoutRouteWithChildren
  '/_default/$org/_default': typeof DefaultOrgDefaultAtlayoutRouteWithChildren
  '/_default/$org/settings': typeof DefaultOrgSettingsRoute
  '/_default/settings/': typeof DefaultSettingsIndexRoute
  '/_default/$org/$project/chat': typeof DefaultOrgProjectChatAtlayoutRouteWithChildren
  '/_default/$org/_default/': typeof DefaultOrgDefaultIndexRoute
  '/_default/create/project/': typeof DefaultCreateProjectIndexRoute
  '/_default/create/team/': typeof DefaultCreateTeamIndexRoute
  '/_default/profile/$username/': typeof DefaultProfileUsernameIndexRoute
  '/_default/profile/settings/': typeof DefaultProfileSettingsIndexRoute
  '/_default/$org/$project/chat/': typeof DefaultOrgProjectChatIndexRoute
  '/_default/$org/$project/discussions/': typeof DefaultOrgProjectDiscussionsIndexRoute
  '/_default/$org/$project/feedback/': typeof DefaultOrgProjectFeedbackIndexRoute
  '/_default/$org/$project/files/': typeof DefaultOrgProjectFilesIndexRoute
  '/_default/$org/$project/overview/': typeof DefaultOrgProjectOverviewIndexRoute
  '/_default/$org/$project/roadmap/': typeof DefaultOrgProjectRoadmapIndexRoute
  '/_default/$org/$project/updates/': typeof DefaultOrgProjectUpdatesIndexRoute
  '/_default/$org/$project/chat/$chatId/': typeof DefaultOrgProjectChatChatIdIndexRoute
  '/_default/$org/$project/feedback/$feedbackId/': typeof DefaultOrgProjectFeedbackFeedbackIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$org'
    | '/create'
    | '/404'
    | '/sign-in'
    | '/sign-out'
    | '/'
    | '/$org/$project'
    | '/$org/settings'
    | '/settings'
    | '/$org/$project/chat'
    | '/$org/'
    | '/create/project'
    | '/create/team'
    | '/profile/$username'
    | '/profile/settings'
    | '/$org/$project/chat/'
    | '/$org/$project/discussions'
    | '/$org/$project/feedback'
    | '/$org/$project/files'
    | '/$org/$project/overview'
    | '/$org/$project/roadmap'
    | '/$org/$project/updates'
    | '/$org/$project/chat/$chatId'
    | '/$org/$project/feedback/$feedbackId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$org'
    | '/create'
    | '/404'
    | '/sign-in'
    | '/sign-out'
    | '/'
    | '/$org/$project'
    | '/$org/settings'
    | '/settings'
    | '/create/project'
    | '/create/team'
    | '/profile/$username'
    | '/profile/settings'
    | '/$org/$project/chat'
    | '/$org/$project/discussions'
    | '/$org/$project/feedback'
    | '/$org/$project/files'
    | '/$org/$project/overview'
    | '/$org/$project/roadmap'
    | '/$org/$project/updates'
    | '/$org/$project/chat/$chatId'
    | '/$org/$project/feedback/$feedbackId'
  id:
    | '__root__'
    | '/_default'
    | '/_default/$org'
    | '/_default/create'
    | '/_blank/404'
    | '/_blank/sign-in'
    | '/_blank/sign-out'
    | '/_default/'
    | '/_default/$org/$project'
    | '/_default/$org/_default'
    | '/_default/$org/settings'
    | '/_default/settings/'
    | '/_default/$org/$project/chat'
    | '/_default/$org/_default/'
    | '/_default/create/project/'
    | '/_default/create/team/'
    | '/_default/profile/$username/'
    | '/_default/profile/settings/'
    | '/_default/$org/$project/chat/'
    | '/_default/$org/$project/discussions/'
    | '/_default/$org/$project/feedback/'
    | '/_default/$org/$project/files/'
    | '/_default/$org/$project/overview/'
    | '/_default/$org/$project/roadmap/'
    | '/_default/$org/$project/updates/'
    | '/_default/$org/$project/chat/$chatId/'
    | '/_default/$org/$project/feedback/$feedbackId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DefaultAtlayoutRoute: typeof DefaultAtlayoutRouteWithChildren
  Blank404Route: typeof Blank404Route
  BlankSignInRoute: typeof BlankSignInRoute
  BlankSignOutRoute: typeof BlankSignOutRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_default': {
      id: '/_default'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DefaultAtlayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_default/': {
      id: '/_default/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DefaultIndexRouteImport
      parentRoute: typeof DefaultAtlayoutRoute
    }
    '/_blank/sign-out': {
      id: '/_blank/sign-out'
      path: '/sign-out'
      fullPath: '/sign-out'
      preLoaderRoute: typeof BlankSignOutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_blank/sign-in': {
      id: '/_blank/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof BlankSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_blank/404': {
      id: '/_blank/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof Blank404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_default/create': {
      id: '/_default/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof DefaultCreateAtlayoutRouteImport
      parentRoute: typeof DefaultAtlayoutRoute
    }
    '/_default/$org': {
      id: '/_default/$org'
      path: '/$org'
      fullPath: '/$org'
      preLoaderRoute: typeof DefaultOrgAtlayoutRouteImport
      parentRoute: typeof DefaultAtlayoutRoute
    }
    '/_default/settings/': {
      id: '/_default/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DefaultSettingsIndexRouteImport
      parentRoute: typeof DefaultAtlayoutRoute
    }
    '/_default/$org/settings': {
      id: '/_default/$org/settings'
      path: '/settings'
      fullPath: '/$org/settings'
      preLoaderRoute: typeof DefaultOrgSettingsRouteImport
      parentRoute: typeof DefaultOrgAtlayoutRoute
    }
    '/_default/$org/_default': {
      id: '/_default/$org/_default'
      path: ''
      fullPath: '/$org'
      preLoaderRoute: typeof DefaultOrgDefaultAtlayoutRouteImport
      parentRoute: typeof DefaultOrgAtlayoutRoute
    }
    '/_default/$org/$project': {
      id: '/_default/$org/$project'
      path: '/$project'
      fullPath: '/$org/$project'
      preLoaderRoute: typeof DefaultOrgProjectAtlayoutRouteImport
      parentRoute: typeof DefaultOrgAtlayoutRoute
    }
    '/_default/profile/settings/': {
      id: '/_default/profile/settings/'
      path: '/profile/settings'
      fullPath: '/profile/settings'
      preLoaderRoute: typeof DefaultProfileSettingsIndexRouteImport
      parentRoute: typeof DefaultAtlayoutRoute
    }
    '/_default/profile/$username/': {
      id: '/_default/profile/$username/'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof DefaultProfileUsernameIndexRouteImport
      parentRoute: typeof DefaultAtlayoutRoute
    }
    '/_default/create/team/': {
      id: '/_default/create/team/'
      path: '/team'
      fullPath: '/create/team'
      preLoaderRoute: typeof DefaultCreateTeamIndexRouteImport
      parentRoute: typeof DefaultCreateAtlayoutRoute
    }
    '/_default/create/project/': {
      id: '/_default/create/project/'
      path: '/project'
      fullPath: '/create/project'
      preLoaderRoute: typeof DefaultCreateProjectIndexRouteImport
      parentRoute: typeof DefaultCreateAtlayoutRoute
    }
    '/_default/$org/_default/': {
      id: '/_default/$org/_default/'
      path: '/'
      fullPath: '/$org/'
      preLoaderRoute: typeof DefaultOrgDefaultIndexRouteImport
      parentRoute: typeof DefaultOrgDefaultAtlayoutRoute
    }
    '/_default/$org/$project/chat': {
      id: '/_default/$org/$project/chat'
      path: '/chat'
      fullPath: '/$org/$project/chat'
      preLoaderRoute: typeof DefaultOrgProjectChatAtlayoutRouteImport
      parentRoute: typeof DefaultOrgProjectAtlayoutRoute
    }
    '/_default/$org/$project/updates/': {
      id: '/_default/$org/$project/updates/'
      path: '/updates'
      fullPath: '/$org/$project/updates'
      preLoaderRoute: typeof DefaultOrgProjectUpdatesIndexRouteImport
      parentRoute: typeof DefaultOrgProjectAtlayoutRoute
    }
    '/_default/$org/$project/roadmap/': {
      id: '/_default/$org/$project/roadmap/'
      path: '/roadmap'
      fullPath: '/$org/$project/roadmap'
      preLoaderRoute: typeof DefaultOrgProjectRoadmapIndexRouteImport
      parentRoute: typeof DefaultOrgProjectAtlayoutRoute
    }
    '/_default/$org/$project/overview/': {
      id: '/_default/$org/$project/overview/'
      path: '/overview'
      fullPath: '/$org/$project/overview'
      preLoaderRoute: typeof DefaultOrgProjectOverviewIndexRouteImport
      parentRoute: typeof DefaultOrgProjectAtlayoutRoute
    }
    '/_default/$org/$project/files/': {
      id: '/_default/$org/$project/files/'
      path: '/files'
      fullPath: '/$org/$project/files'
      preLoaderRoute: typeof DefaultOrgProjectFilesIndexRouteImport
      parentRoute: typeof DefaultOrgProjectAtlayoutRoute
    }
    '/_default/$org/$project/feedback/': {
      id: '/_default/$org/$project/feedback/'
      path: '/feedback'
      fullPath: '/$org/$project/feedback'
      preLoaderRoute: typeof DefaultOrgProjectFeedbackIndexRouteImport
      parentRoute: typeof DefaultOrgProjectAtlayoutRoute
    }
    '/_default/$org/$project/discussions/': {
      id: '/_default/$org/$project/discussions/'
      path: '/discussions'
      fullPath: '/$org/$project/discussions'
      preLoaderRoute: typeof DefaultOrgProjectDiscussionsIndexRouteImport
      parentRoute: typeof DefaultOrgProjectAtlayoutRoute
    }
    '/_default/$org/$project/chat/': {
      id: '/_default/$org/$project/chat/'
      path: '/'
      fullPath: '/$org/$project/chat/'
      preLoaderRoute: typeof DefaultOrgProjectChatIndexRouteImport
      parentRoute: typeof DefaultOrgProjectChatAtlayoutRoute
    }
    '/_default/$org/$project/feedback/$feedbackId/': {
      id: '/_default/$org/$project/feedback/$feedbackId/'
      path: '/feedback/$feedbackId'
      fullPath: '/$org/$project/feedback/$feedbackId'
      preLoaderRoute: typeof DefaultOrgProjectFeedbackFeedbackIdIndexRouteImport
      parentRoute: typeof DefaultOrgProjectAtlayoutRoute
    }
    '/_default/$org/$project/chat/$chatId/': {
      id: '/_default/$org/$project/chat/$chatId/'
      path: '/$chatId'
      fullPath: '/$org/$project/chat/$chatId'
      preLoaderRoute: typeof DefaultOrgProjectChatChatIdIndexRouteImport
      parentRoute: typeof DefaultOrgProjectChatAtlayoutRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface DefaultOrgProjectChatAtlayoutRouteChildren {
  DefaultOrgProjectChatIndexRoute: typeof DefaultOrgProjectChatIndexRoute
  DefaultOrgProjectChatChatIdIndexRoute: typeof DefaultOrgProjectChatChatIdIndexRoute
}

const DefaultOrgProjectChatAtlayoutRouteChildren: DefaultOrgProjectChatAtlayoutRouteChildren =
  {
    DefaultOrgProjectChatIndexRoute: DefaultOrgProjectChatIndexRoute,
    DefaultOrgProjectChatChatIdIndexRoute:
      DefaultOrgProjectChatChatIdIndexRoute,
  }

const DefaultOrgProjectChatAtlayoutRouteWithChildren =
  DefaultOrgProjectChatAtlayoutRoute._addFileChildren(
    DefaultOrgProjectChatAtlayoutRouteChildren,
  )

interface DefaultOrgProjectAtlayoutRouteChildren {
  DefaultOrgProjectChatAtlayoutRoute: typeof DefaultOrgProjectChatAtlayoutRouteWithChildren
  DefaultOrgProjectDiscussionsIndexRoute: typeof DefaultOrgProjectDiscussionsIndexRoute
  DefaultOrgProjectFeedbackIndexRoute: typeof DefaultOrgProjectFeedbackIndexRoute
  DefaultOrgProjectFilesIndexRoute: typeof DefaultOrgProjectFilesIndexRoute
  DefaultOrgProjectOverviewIndexRoute: typeof DefaultOrgProjectOverviewIndexRoute
  DefaultOrgProjectRoadmapIndexRoute: typeof DefaultOrgProjectRoadmapIndexRoute
  DefaultOrgProjectUpdatesIndexRoute: typeof DefaultOrgProjectUpdatesIndexRoute
  DefaultOrgProjectFeedbackFeedbackIdIndexRoute: typeof DefaultOrgProjectFeedbackFeedbackIdIndexRoute
}

const DefaultOrgProjectAtlayoutRouteChildren: DefaultOrgProjectAtlayoutRouteChildren =
  {
    DefaultOrgProjectChatAtlayoutRoute:
      DefaultOrgProjectChatAtlayoutRouteWithChildren,
    DefaultOrgProjectDiscussionsIndexRoute:
      DefaultOrgProjectDiscussionsIndexRoute,
    DefaultOrgProjectFeedbackIndexRoute: DefaultOrgProjectFeedbackIndexRoute,
    DefaultOrgProjectFilesIndexRoute: DefaultOrgProjectFilesIndexRoute,
    DefaultOrgProjectOverviewIndexRoute: DefaultOrgProjectOverviewIndexRoute,
    DefaultOrgProjectRoadmapIndexRoute: DefaultOrgProjectRoadmapIndexRoute,
    DefaultOrgProjectUpdatesIndexRoute: DefaultOrgProjectUpdatesIndexRoute,
    DefaultOrgProjectFeedbackFeedbackIdIndexRoute:
      DefaultOrgProjectFeedbackFeedbackIdIndexRoute,
  }

const DefaultOrgProjectAtlayoutRouteWithChildren =
  DefaultOrgProjectAtlayoutRoute._addFileChildren(
    DefaultOrgProjectAtlayoutRouteChildren,
  )

interface DefaultOrgDefaultAtlayoutRouteChildren {
  DefaultOrgDefaultIndexRoute: typeof DefaultOrgDefaultIndexRoute
}

const DefaultOrgDefaultAtlayoutRouteChildren: DefaultOrgDefaultAtlayoutRouteChildren =
  {
    DefaultOrgDefaultIndexRoute: DefaultOrgDefaultIndexRoute,
  }

const DefaultOrgDefaultAtlayoutRouteWithChildren =
  DefaultOrgDefaultAtlayoutRoute._addFileChildren(
    DefaultOrgDefaultAtlayoutRouteChildren,
  )

interface DefaultOrgAtlayoutRouteChildren {
  DefaultOrgProjectAtlayoutRoute: typeof DefaultOrgProjectAtlayoutRouteWithChildren
  DefaultOrgDefaultAtlayoutRoute: typeof DefaultOrgDefaultAtlayoutRouteWithChildren
  DefaultOrgSettingsRoute: typeof DefaultOrgSettingsRoute
}

const DefaultOrgAtlayoutRouteChildren: DefaultOrgAtlayoutRouteChildren = {
  DefaultOrgProjectAtlayoutRoute: DefaultOrgProjectAtlayoutRouteWithChildren,
  DefaultOrgDefaultAtlayoutRoute: DefaultOrgDefaultAtlayoutRouteWithChildren,
  DefaultOrgSettingsRoute: DefaultOrgSettingsRoute,
}

const DefaultOrgAtlayoutRouteWithChildren =
  DefaultOrgAtlayoutRoute._addFileChildren(DefaultOrgAtlayoutRouteChildren)

interface DefaultCreateAtlayoutRouteChildren {
  DefaultCreateProjectIndexRoute: typeof DefaultCreateProjectIndexRoute
  DefaultCreateTeamIndexRoute: typeof DefaultCreateTeamIndexRoute
}

const DefaultCreateAtlayoutRouteChildren: DefaultCreateAtlayoutRouteChildren = {
  DefaultCreateProjectIndexRoute: DefaultCreateProjectIndexRoute,
  DefaultCreateTeamIndexRoute: DefaultCreateTeamIndexRoute,
}

const DefaultCreateAtlayoutRouteWithChildren =
  DefaultCreateAtlayoutRoute._addFileChildren(
    DefaultCreateAtlayoutRouteChildren,
  )

interface DefaultAtlayoutRouteChildren {
  DefaultOrgAtlayoutRoute: typeof DefaultOrgAtlayoutRouteWithChildren
  DefaultCreateAtlayoutRoute: typeof DefaultCreateAtlayoutRouteWithChildren
  DefaultIndexRoute: typeof DefaultIndexRoute
  DefaultSettingsIndexRoute: typeof DefaultSettingsIndexRoute
  DefaultProfileUsernameIndexRoute: typeof DefaultProfileUsernameIndexRoute
  DefaultProfileSettingsIndexRoute: typeof DefaultProfileSettingsIndexRoute
}

const DefaultAtlayoutRouteChildren: DefaultAtlayoutRouteChildren = {
  DefaultOrgAtlayoutRoute: DefaultOrgAtlayoutRouteWithChildren,
  DefaultCreateAtlayoutRoute: DefaultCreateAtlayoutRouteWithChildren,
  DefaultIndexRoute: DefaultIndexRoute,
  DefaultSettingsIndexRoute: DefaultSettingsIndexRoute,
  DefaultProfileUsernameIndexRoute: DefaultProfileUsernameIndexRoute,
  DefaultProfileSettingsIndexRoute: DefaultProfileSettingsIndexRoute,
}

const DefaultAtlayoutRouteWithChildren = DefaultAtlayoutRoute._addFileChildren(
  DefaultAtlayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  DefaultAtlayoutRoute: DefaultAtlayoutRouteWithChildren,
  Blank404Route: Blank404Route,
  BlankSignInRoute: BlankSignInRoute,
  BlankSignOutRoute: BlankSignOutRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
